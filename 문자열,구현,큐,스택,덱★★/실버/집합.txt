풀이 1: set을 이용.

#include <iostream>
#include <set>
#include <string>

using namespace std;

set<int> s;
int n;

void sol(string str, int a)
{
	if (str == "add")
	{
		s.insert(a);
	}
	else if (str == "remove")
	{
		s.erase(a);
	}
	else if (str == "check")
	{
		if (s.find(a) == s.end()) cout << "0" << "\n";
		else cout << "1" << "\n";
	}
	else if (str == "toggle")
	{
		if (s.find(a) == s.end()) s.insert(a);
		else s.erase(a);
	}
	else if (str == "all")
	{
		for (int i = 1; i <= 20; i++)
		{
			s.insert(i);
		}
	}
	else
	{
		s.clear();
	}
}

int main()
{
	ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

	cin >> n;
	for (int i = 0; i < n; i++)
	{
		int a;
		string str;
		cin >> str;
		if (str != "all" && str != "empty")
		{
			cin >> a;
			sol(str, a);
		}
		else
		{
			sol(str, 0);
		}
	}
}







		비트마스킹을 이용(다른사람 풀이 참고)
#include <iostream>
#include <string>

using namespace std;

int n;
int k=0;

void sol(string str, int a)
{
	if (str == "add")
	{
		k = k | (1 << a);
	}
	else if (str == "remove")
	{
		k = k & ~(1<<a);
	}
	else if (str == "check")
	{
		if ( k & (1<<a) ) cout << "1\n";
		else cout << "0\n";
	}
	else if (str == "toggle")
	{
		if(k & (1 << a)) k = k & ~(1 << a);
		else k = k | (1 << a);
	}
	else if (str == "all")
	{
		k =  (1 << 21)-1;
	}
	else
	{
		k = 0;
	}
}

int main()
{
	ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

	cin >> n;
	for (int i = 0; i < n; i++)
	{
		int a;
		string str;
		cin >> str;
		if (str != "all" && str != "empty")
		{
			cin >> a;
			sol(str, a);
		}
		else
		{
			sol(str, 0);
		}
	}
}
