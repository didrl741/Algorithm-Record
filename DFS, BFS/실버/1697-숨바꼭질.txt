#include <iostream>
#include <queue>

using namespace std;

int n, m;
int ans=0 ;
bool visited[100001];

struct St
{
	int nowPosition;
	int cnt;
};

queue< St > q;

void BFS()
{
	visited[n] = true;
	q.push({ n, 0 });			// 큐에는 true 해놓고 넣는다.

	while (!q.empty())
	{
		if (q.front().nowPosition == m)
		{
			ans = q.front().cnt;
			return;							
		}

		int nowTop = q.front().nowPosition;
		int nowCnt = q.front().cnt;

		q.pop();

		if (nowTop * 2 <= 100000 && !visited[nowTop * 2])
		{
			visited[nowTop * 2] = true;
			q.push({ nowTop * 2, nowCnt + 1 });
		}

		if (nowTop + 1 <= 100000 && !visited[nowTop + 1])
		{
			visited[nowTop + 1] = true;
			q.push({ nowTop + 1, nowCnt + 1 });
		}

		if (nowTop - 1 >= 0 && !visited[nowTop - 1])
		{
			visited[nowTop - 1] = true;
			q.push({ nowTop - 1, nowCnt + 1 });
		}
	}
}



int main()
{
	cin >> n >> m;

	BFS();

	cout << ans;
}